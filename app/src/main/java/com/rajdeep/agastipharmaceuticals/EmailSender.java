package com.rajdeep.agastipharmaceuticals;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.Toast;

import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class EmailSender extends AsyncTask<Void, Void, Void> {

    private static final String TAG = "EmailSender";
    private static final String HOST = "smtp.gmail.com";
    private static final String USERNAME = "rexpress1210@gmail.com";
    private static final String PASSWORD = "kjqkgyettzaplpxa";      // application specific password generated by google account by my own  (it compares that if this string password is equals to my app password generated in google account. If yes, that means this user is authenticate and is ready to send mail.)
    private static final String FROM_EMAIL = "rexpress1210@gmail.com";

    static String userEmail;
    static String userSubject;
    static String userMessageBody;
    Context context;
    ProgressDialog progressDialog;
    int rand;

    EmailSender(Context applicationContext) {
        context = applicationContext;
    }

    public void sendEmail(String toEmail, String subject, String messageBody, int randomNumber) {
        userEmail = toEmail;
        userSubject = subject;
        userMessageBody = messageBody;
        rand = randomNumber;

        execute(); // calls doInBackground

    }

    @Override
    protected void onPreExecute() {
        progressDialog = new ProgressDialog(context);
        progressDialog.setMessage("Sending OTP To Your Email...");
        progressDialog.setCancelable(false);
        progressDialog.show();
    }

    @Override
    protected void onPostExecute(Void unused) {
        progressDialog.dismiss();
        Intent i = new Intent(context, EnterOtpActivity.class);
        Toast.makeText(context, "OTP sent successfully", Toast.LENGTH_LONG).show();
        i.putExtra("rand", String.valueOf(rand));
        i.putExtra("email", userEmail);
        context.startActivity(i);
    }

    @Override
    protected Void doInBackground(Void... voids) {
        Properties props = new Properties();
        props.put("mail.smtp.host", HOST);
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");

        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(USERNAME, PASSWORD);
                    }
                });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(FROM_EMAIL));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(userEmail));
            message.setSubject(userSubject);
            message.setText("OTP to reset the password is : " + userMessageBody);

            Transport.send(message);

            Log.d(TAG, "OTP sent successfully");

        } catch (MessagingException e) {
            Log.e(TAG, "Error sending email", e);
        }
        return null;
    }
}
